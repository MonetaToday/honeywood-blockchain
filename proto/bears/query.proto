syntax = "proto3";
package MonetaToday.honeywood.bears;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bears/params.proto";
import "bears/bear_names.proto";
import "bears/bears.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/MonetaToday/HoneyWood/x/bears/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/MonetaToday/honeywood/bears/params";
  }
  // Queries a BearNames by index.
	rpc BearNames(QueryGetBearNamesRequest) returns (QueryGetBearNamesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bear_names/{name}";
	}

	// Queries a list of BearNames items.
	rpc BearNamesAll(QueryAllBearNamesRequest) returns (QueryAllBearNamesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bear_names";
	}

// Queries a Bears by id.
	rpc Bears(QueryGetBearsRequest) returns (QueryGetBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bears/{id}";
	}

	// Queries a list of Bears items.
	rpc BearsAll(QueryAllBearsRequest) returns (QueryAllBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bears";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetBearNamesRequest {
	  string name = 1;

}

message QueryGetBearNamesResponse {
	BearNames bearNames = 1 [(gogoproto.nullable) = false];
}

message QueryAllBearNamesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBearNamesResponse {
	repeated BearNames bearNames = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBearsRequest {
	uint64 id = 1;
}

message QueryGetBearsResponse {
	Bears Bears = 1 [(gogoproto.nullable) = false];
}

message QueryAllBearsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBearsResponse {
	repeated Bears Bears = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
