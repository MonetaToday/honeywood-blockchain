syntax = "proto3";
package MonetaToday.honeywood.bears;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bears/params.proto";
import "bears/bear_names.proto";
import "bears/bears.proto";
import "bears/address_bears.proto";
import "bears/fields.proto";
import "bears/trees.proto";
import "bears/decorations.proto";
import "bears/apiaries.proto";
import "bears/bees.proto";
import "bears/air_info.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/MonetaToday/HoneyWood/x/bears/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/MonetaToday/honeywood/bears/params";
  }
  // Queries a BearNames by index.
	rpc BearNames(QueryGetBearNamesRequest) returns (QueryGetBearNamesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bear_names/{name}";
	}

	// Queries a list of BearNames items.
	rpc BearNamesAll(QueryAllBearNamesRequest) returns (QueryAllBearNamesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bear_names";
	}

// Queries a Bears by id.
	rpc Bears(QueryGetBearsRequest) returns (QueryGetBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bears/{id}";
	}

	// Queries a list of Bears items.
	rpc BearsAll(QueryAllBearsRequest) returns (QueryAllBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bears";
	}

// Queries a AddressBears by index.
	rpc AddressBears(QueryGetAddressBearsRequest) returns (QueryGetAddressBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/address_bears/{address}";
	}

	// Queries a list of AddressBears items.
	rpc AddressBearsAll(QueryAllAddressBearsRequest) returns (QueryAllAddressBearsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/address_bears";
	}

// Queries a Fields by id.
	rpc Fields(QueryGetFieldsRequest) returns (QueryGetFieldsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/fields/{id}";
	}

	// Queries a list of Fields items.
	rpc FieldsAll(QueryAllFieldsRequest) returns (QueryAllFieldsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/fields";
	}

// Queries a Trees by id.
	rpc Trees(QueryGetTreesRequest) returns (QueryGetTreesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/trees/{id}";
	}

	// Queries a list of Trees items.
	rpc TreesAll(QueryAllTreesRequest) returns (QueryAllTreesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/trees";
	}

// Queries a Decorations by id.
	rpc Decorations(QueryGetDecorationsRequest) returns (QueryGetDecorationsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/decorations/{id}";
	}

	// Queries a list of Decorations items.
	rpc DecorationsAll(QueryAllDecorationsRequest) returns (QueryAllDecorationsResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/decorations";
	}

// Queries a Apiaries by id.
	rpc Apiaries(QueryGetApiariesRequest) returns (QueryGetApiariesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/apiaries/{id}";
	}

	// Queries a list of Apiaries items.
	rpc ApiariesAll(QueryAllApiariesRequest) returns (QueryAllApiariesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/apiaries";
	}

// Queries a Bees by id.
	rpc Bees(QueryGetBeesRequest) returns (QueryGetBeesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bees/{id}";
	}

	// Queries a list of Bees items.
	rpc BeesAll(QueryAllBeesRequest) returns (QueryAllBeesResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/bees";
	}

// Queries a list of CalculateHoneyInApiary items.
	rpc CalculateHoneyInApiary(QueryCalculateHoneyInApiaryRequest) returns (QueryCalculateHoneyInApiaryResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/calculate_honey_in_apiary/{apiaryId}";
	}

// Queries a AirInfo by index.
	rpc AirInfo(QueryGetAirInfoRequest) returns (QueryGetAirInfoResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/air_info";
	}
// Queries a list of ShowLastAirInfo items.
	rpc ShowLastAirInfo(QueryShowLastAirInfoRequest) returns (QueryShowLastAirInfoResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/show_last_air_info";
	}

// Queries a list of ShowApiariesInfoByBearId items.
	rpc ShowApiariesInfoByBearId(QueryShowApiariesInfoByBearIdRequest) returns (QueryShowApiariesInfoByBearIdResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/show_honey_from_all_bear_apiaries/{bearId}";
	}

// Queries a list of ShowHoneyPowerInApiary items.
	rpc ShowHoneyPowerInApiary(QueryShowHoneyPowerInApiaryRequest) returns (QueryShowHoneyPowerInApiaryResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/show_honey_power_in_apiary/{apiaryId}";
	}

// Queries a list of ShowHoneyPowerByBeeType items.
	rpc ShowHoneyPowerByBeeType(QueryShowHoneyPowerByBeeTypeRequest) returns (QueryShowHoneyPowerByBeeTypeResponse) {
		option (google.api.http).get = "/MonetaToday/honeywood/bears/show_honey_power_by_bee_type/{beeType}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetBearNamesRequest {
	  string name = 1;

}

message QueryGetBearNamesResponse {
	BearNames bearNames = 1 [(gogoproto.nullable) = false];
}

message QueryAllBearNamesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBearNamesResponse {
	repeated BearNames bearNames = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBearsRequest {
	uint64 id = 1;
}

message QueryGetBearsResponse {
	Bears Bears = 1 [(gogoproto.nullable) = false];
}

message QueryAllBearsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBearsResponse {
	repeated Bears Bears = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAddressBearsRequest {
	  string address = 1;

}

message QueryGetAddressBearsResponse {
	AddressBears addressBears = 1 [(gogoproto.nullable) = false];
}

message QueryAllAddressBearsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressBearsResponse {
	repeated AddressBears addressBears = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetFieldsRequest {
	uint64 id = 1;
}

message QueryGetFieldsResponse {
	Fields Fields = 1 [(gogoproto.nullable) = false];
}

message QueryAllFieldsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFieldsResponse {
	repeated Fields Fields = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTreesRequest {
	uint64 id = 1;
}

message QueryGetTreesResponse {
	Trees Trees = 1 [(gogoproto.nullable) = false];
}

message QueryAllTreesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTreesResponse {
	repeated Trees Trees = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDecorationsRequest {
	uint64 id = 1;
}

message QueryGetDecorationsResponse {
	Decorations Decorations = 1 [(gogoproto.nullable) = false];
}

message QueryAllDecorationsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDecorationsResponse {
	repeated Decorations Decorations = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetApiariesRequest {
	uint64 id = 1;
}

message QueryGetApiariesResponse {
	Apiaries Apiaries = 1 [(gogoproto.nullable) = false];
}

message QueryAllApiariesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllApiariesResponse {
	repeated Apiaries Apiaries = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBeesRequest {
	uint64 id = 1;
}

message QueryGetBeesResponse {
	Bees Bees = 1 [(gogoproto.nullable) = false];
}

message QueryAllBeesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBeesResponse {
	repeated Bees Bees = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCalculateHoneyInApiaryRequest {
  uint64 apiaryId = 1;
}

message QueryCalculateHoneyInApiaryResponse {
  string countHoney = 1
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}

message QueryGetAirInfoRequest {}

message QueryGetAirInfoResponse {
	AirInfo AirInfo = 1 [(gogoproto.nullable) = false];
}
message QueryShowLastAirInfoRequest {
}

message QueryShowLastAirInfoResponse {
  uint64 height = 1;
  string count = 2
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  string purity = 3
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  string supply = 4
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  string consume = 5
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}

message QueryShowApiariesInfoByBearIdRequest {
  uint64 bearId = 1;
}

message QueryShowApiariesInfoByBearIdResponse {
  message ApiaryInfo {
    uint64 id = 1;
    string countHoney = 2
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
    ApiaryParams params = 3;
  }

  repeated ApiaryInfo apiariesInfo = 1 [(gogoproto.nullable) = false];
}

message QueryShowHoneyPowerInApiaryRequest {
  uint64 apiaryId = 1;
}

message QueryShowHoneyPowerInApiaryResponse {
  string honeyPower = 1
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}

message QueryShowHoneyPowerByBeeTypeRequest {
  string beeType = 1;
}

message QueryShowHoneyPowerByBeeTypeResponse {
  string honeyPower = 1
    [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}

// this line is used by starport scaffolding # 3
