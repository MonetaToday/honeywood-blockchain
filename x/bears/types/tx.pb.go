// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bears/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgInitGameAndSetName struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgInitGameAndSetName) Reset()         { *m = MsgInitGameAndSetName{} }
func (m *MsgInitGameAndSetName) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndSetName) ProtoMessage()    {}
func (*MsgInitGameAndSetName) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{0}
}
func (m *MsgInitGameAndSetName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndSetName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndSetName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndSetName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndSetName.Merge(m, src)
}
func (m *MsgInitGameAndSetName) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndSetName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndSetName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndSetName proto.InternalMessageInfo

func (m *MsgInitGameAndSetName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInitGameAndSetName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgInitGameAndSetNameResponse struct {
}

func (m *MsgInitGameAndSetNameResponse) Reset()         { *m = MsgInitGameAndSetNameResponse{} }
func (m *MsgInitGameAndSetNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndSetNameResponse) ProtoMessage()    {}
func (*MsgInitGameAndSetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{1}
}
func (m *MsgInitGameAndSetNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndSetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndSetNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndSetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndSetNameResponse.Merge(m, src)
}
func (m *MsgInitGameAndSetNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndSetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndSetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndSetNameResponse proto.InternalMessageInfo

type MsgSetName struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BearId  uint64 `protobuf:"varint,2,opt,name=bearId,proto3" json:"bearId,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgSetName) Reset()         { *m = MsgSetName{} }
func (m *MsgSetName) String() string { return proto.CompactTextString(m) }
func (*MsgSetName) ProtoMessage()    {}
func (*MsgSetName) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{2}
}
func (m *MsgSetName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetName.Merge(m, src)
}
func (m *MsgSetName) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetName proto.InternalMessageInfo

func (m *MsgSetName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetName) GetBearId() uint64 {
	if m != nil {
		return m.BearId
	}
	return 0
}

func (m *MsgSetName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgSetNameResponse struct {
}

func (m *MsgSetNameResponse) Reset()         { *m = MsgSetNameResponse{} }
func (m *MsgSetNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetNameResponse) ProtoMessage()    {}
func (*MsgSetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{3}
}
func (m *MsgSetNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNameResponse.Merge(m, src)
}
func (m *MsgSetNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNameResponse proto.InternalMessageInfo

type MsgInitGameAndExtendField struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgInitGameAndExtendField) Reset()         { *m = MsgInitGameAndExtendField{} }
func (m *MsgInitGameAndExtendField) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndExtendField) ProtoMessage()    {}
func (*MsgInitGameAndExtendField) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{4}
}
func (m *MsgInitGameAndExtendField) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndExtendField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndExtendField.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndExtendField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndExtendField.Merge(m, src)
}
func (m *MsgInitGameAndExtendField) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndExtendField) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndExtendField.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndExtendField proto.InternalMessageInfo

func (m *MsgInitGameAndExtendField) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgInitGameAndExtendFieldResponse struct {
	CountGrounds uint64 `protobuf:"varint,1,opt,name=countGrounds,proto3" json:"countGrounds,omitempty"`
}

func (m *MsgInitGameAndExtendFieldResponse) Reset()         { *m = MsgInitGameAndExtendFieldResponse{} }
func (m *MsgInitGameAndExtendFieldResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndExtendFieldResponse) ProtoMessage()    {}
func (*MsgInitGameAndExtendFieldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{5}
}
func (m *MsgInitGameAndExtendFieldResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndExtendFieldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndExtendFieldResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndExtendFieldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndExtendFieldResponse.Merge(m, src)
}
func (m *MsgInitGameAndExtendFieldResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndExtendFieldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndExtendFieldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndExtendFieldResponse proto.InternalMessageInfo

func (m *MsgInitGameAndExtendFieldResponse) GetCountGrounds() uint64 {
	if m != nil {
		return m.CountGrounds
	}
	return 0
}

type MsgExtendField struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgExtendField) Reset()         { *m = MsgExtendField{} }
func (m *MsgExtendField) String() string { return proto.CompactTextString(m) }
func (*MsgExtendField) ProtoMessage()    {}
func (*MsgExtendField) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{6}
}
func (m *MsgExtendField) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExtendField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExtendField.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExtendField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExtendField.Merge(m, src)
}
func (m *MsgExtendField) XXX_Size() int {
	return m.Size()
}
func (m *MsgExtendField) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExtendField.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExtendField proto.InternalMessageInfo

func (m *MsgExtendField) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgExtendField) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgExtendFieldResponse struct {
	CountGrounds uint64 `protobuf:"varint,1,opt,name=countGrounds,proto3" json:"countGrounds,omitempty"`
}

func (m *MsgExtendFieldResponse) Reset()         { *m = MsgExtendFieldResponse{} }
func (m *MsgExtendFieldResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExtendFieldResponse) ProtoMessage()    {}
func (*MsgExtendFieldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{7}
}
func (m *MsgExtendFieldResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExtendFieldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExtendFieldResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExtendFieldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExtendFieldResponse.Merge(m, src)
}
func (m *MsgExtendFieldResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExtendFieldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExtendFieldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExtendFieldResponse proto.InternalMessageInfo

func (m *MsgExtendFieldResponse) GetCountGrounds() uint64 {
	if m != nil {
		return m.CountGrounds
	}
	return 0
}

type MsgInitGameAndCreateTree struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgInitGameAndCreateTree) Reset()         { *m = MsgInitGameAndCreateTree{} }
func (m *MsgInitGameAndCreateTree) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndCreateTree) ProtoMessage()    {}
func (*MsgInitGameAndCreateTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{8}
}
func (m *MsgInitGameAndCreateTree) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndCreateTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndCreateTree.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndCreateTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndCreateTree.Merge(m, src)
}
func (m *MsgInitGameAndCreateTree) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndCreateTree) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndCreateTree.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndCreateTree proto.InternalMessageInfo

func (m *MsgInitGameAndCreateTree) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgInitGameAndCreateTreeResponse struct {
	Tree *Trees `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
}

func (m *MsgInitGameAndCreateTreeResponse) Reset()         { *m = MsgInitGameAndCreateTreeResponse{} }
func (m *MsgInitGameAndCreateTreeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitGameAndCreateTreeResponse) ProtoMessage()    {}
func (*MsgInitGameAndCreateTreeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{9}
}
func (m *MsgInitGameAndCreateTreeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitGameAndCreateTreeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitGameAndCreateTreeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitGameAndCreateTreeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitGameAndCreateTreeResponse.Merge(m, src)
}
func (m *MsgInitGameAndCreateTreeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitGameAndCreateTreeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitGameAndCreateTreeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitGameAndCreateTreeResponse proto.InternalMessageInfo

func (m *MsgInitGameAndCreateTreeResponse) GetTree() *Trees {
	if m != nil {
		return m.Tree
	}
	return nil
}

type MsgCreateTree struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BearId   uint64 `protobuf:"varint,2,opt,name=bearId,proto3" json:"bearId,omitempty"`
	FieldId  uint64 `protobuf:"varint,3,opt,name=fieldId,proto3" json:"fieldId,omitempty"`
	GroundId uint64 `protobuf:"varint,4,opt,name=groundId,proto3" json:"groundId,omitempty"`
}

func (m *MsgCreateTree) Reset()         { *m = MsgCreateTree{} }
func (m *MsgCreateTree) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTree) ProtoMessage()    {}
func (*MsgCreateTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{10}
}
func (m *MsgCreateTree) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTree.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTree.Merge(m, src)
}
func (m *MsgCreateTree) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTree) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTree.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTree proto.InternalMessageInfo

func (m *MsgCreateTree) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTree) GetBearId() uint64 {
	if m != nil {
		return m.BearId
	}
	return 0
}

func (m *MsgCreateTree) GetFieldId() uint64 {
	if m != nil {
		return m.FieldId
	}
	return 0
}

func (m *MsgCreateTree) GetGroundId() uint64 {
	if m != nil {
		return m.GroundId
	}
	return 0
}

type MsgCreateTreeResponse struct {
	Tree *Trees `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
}

func (m *MsgCreateTreeResponse) Reset()         { *m = MsgCreateTreeResponse{} }
func (m *MsgCreateTreeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTreeResponse) ProtoMessage()    {}
func (*MsgCreateTreeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{11}
}
func (m *MsgCreateTreeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTreeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTreeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTreeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTreeResponse.Merge(m, src)
}
func (m *MsgCreateTreeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTreeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTreeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTreeResponse proto.InternalMessageInfo

func (m *MsgCreateTreeResponse) GetTree() *Trees {
	if m != nil {
		return m.Tree
	}
	return nil
}

type MsgMoveItemOnField struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	FieldId     uint64 `protobuf:"varint,2,opt,name=fieldId,proto3" json:"fieldId,omitempty"`
	GroundId    uint64 `protobuf:"varint,3,opt,name=groundId,proto3" json:"groundId,omitempty"`
	NewGroundId uint64 `protobuf:"varint,4,opt,name=newGroundId,proto3" json:"newGroundId,omitempty"`
}

func (m *MsgMoveItemOnField) Reset()         { *m = MsgMoveItemOnField{} }
func (m *MsgMoveItemOnField) String() string { return proto.CompactTextString(m) }
func (*MsgMoveItemOnField) ProtoMessage()    {}
func (*MsgMoveItemOnField) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{12}
}
func (m *MsgMoveItemOnField) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMoveItemOnField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMoveItemOnField.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMoveItemOnField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMoveItemOnField.Merge(m, src)
}
func (m *MsgMoveItemOnField) XXX_Size() int {
	return m.Size()
}
func (m *MsgMoveItemOnField) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMoveItemOnField.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMoveItemOnField proto.InternalMessageInfo

func (m *MsgMoveItemOnField) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMoveItemOnField) GetFieldId() uint64 {
	if m != nil {
		return m.FieldId
	}
	return 0
}

func (m *MsgMoveItemOnField) GetGroundId() uint64 {
	if m != nil {
		return m.GroundId
	}
	return 0
}

func (m *MsgMoveItemOnField) GetNewGroundId() uint64 {
	if m != nil {
		return m.NewGroundId
	}
	return 0
}

type MsgMoveItemOnFieldResponse struct {
}

func (m *MsgMoveItemOnFieldResponse) Reset()         { *m = MsgMoveItemOnFieldResponse{} }
func (m *MsgMoveItemOnFieldResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMoveItemOnFieldResponse) ProtoMessage()    {}
func (*MsgMoveItemOnFieldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4b1de47af2539c, []int{13}
}
func (m *MsgMoveItemOnFieldResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMoveItemOnFieldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMoveItemOnFieldResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMoveItemOnFieldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMoveItemOnFieldResponse.Merge(m, src)
}
func (m *MsgMoveItemOnFieldResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMoveItemOnFieldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMoveItemOnFieldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMoveItemOnFieldResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgInitGameAndSetName)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndSetName")
	proto.RegisterType((*MsgInitGameAndSetNameResponse)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndSetNameResponse")
	proto.RegisterType((*MsgSetName)(nil), "MonetaToday.honeywood.bears.MsgSetName")
	proto.RegisterType((*MsgSetNameResponse)(nil), "MonetaToday.honeywood.bears.MsgSetNameResponse")
	proto.RegisterType((*MsgInitGameAndExtendField)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndExtendField")
	proto.RegisterType((*MsgInitGameAndExtendFieldResponse)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndExtendFieldResponse")
	proto.RegisterType((*MsgExtendField)(nil), "MonetaToday.honeywood.bears.MsgExtendField")
	proto.RegisterType((*MsgExtendFieldResponse)(nil), "MonetaToday.honeywood.bears.MsgExtendFieldResponse")
	proto.RegisterType((*MsgInitGameAndCreateTree)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndCreateTree")
	proto.RegisterType((*MsgInitGameAndCreateTreeResponse)(nil), "MonetaToday.honeywood.bears.MsgInitGameAndCreateTreeResponse")
	proto.RegisterType((*MsgCreateTree)(nil), "MonetaToday.honeywood.bears.MsgCreateTree")
	proto.RegisterType((*MsgCreateTreeResponse)(nil), "MonetaToday.honeywood.bears.MsgCreateTreeResponse")
	proto.RegisterType((*MsgMoveItemOnField)(nil), "MonetaToday.honeywood.bears.MsgMoveItemOnField")
	proto.RegisterType((*MsgMoveItemOnFieldResponse)(nil), "MonetaToday.honeywood.bears.MsgMoveItemOnFieldResponse")
}

func init() { proto.RegisterFile("bears/tx.proto", fileDescriptor_0b4b1de47af2539c) }

var fileDescriptor_0b4b1de47af2539c = []byte{
	// 575 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcf, 0x8b, 0xd3, 0x4e,
	0x14, 0x6f, 0xda, 0xd0, 0x7e, 0xbf, 0xaf, 0x5a, 0x71, 0x70, 0x4b, 0x8c, 0x1a, 0xeb, 0x5c, 0x14,
	0x85, 0x04, 0xba, 0xee, 0x0a, 0x8b, 0x0a, 0x2a, 0x6b, 0xb7, 0x87, 0xb8, 0x10, 0x17, 0x84, 0xbd,
	0xa5, 0x9d, 0x31, 0x5b, 0xd8, 0xce, 0x94, 0x4c, 0x6a, 0x5b, 0xbc, 0x8a, 0x37, 0x61, 0xff, 0x2c,
	0x8f, 0x7b, 0xf4, 0x28, 0xed, 0x3f, 0xe0, 0x9f, 0x20, 0x19, 0x9b, 0x6c, 0xb2, 0x36, 0x4d, 0xb3,
	0x78, 0xeb, 0x9b, 0xbe, 0xcf, 0xaf, 0x99, 0xf7, 0x08, 0x34, 0x7a, 0xd4, 0xf5, 0x85, 0x15, 0x4c,
	0xcd, 0x91, 0xcf, 0x03, 0x8e, 0xee, 0xd8, 0x9c, 0xd1, 0xc0, 0x3d, 0xe2, 0xc4, 0x9d, 0x99, 0x27,
	0x9c, 0xd1, 0xd9, 0x84, 0x73, 0x62, 0xca, 0x2e, 0xfd, 0xe6, 0xb2, 0xd9, 0xa7, 0x54, 0xfc, 0xe9,
	0xc7, 0xfb, 0xb0, 0x65, 0x0b, 0xaf, 0xcb, 0x06, 0x41, 0xc7, 0x1d, 0xd2, 0x57, 0x8c, 0xbc, 0xa7,
	0xc1, 0x3b, 0x77, 0x48, 0x91, 0x06, 0xb5, 0xbe, 0x4f, 0xdd, 0x80, 0xfb, 0x9a, 0xd2, 0x52, 0x1e,
	0xfd, 0xef, 0x44, 0x25, 0x42, 0xa0, 0x32, 0x77, 0x48, 0xb5, 0xb2, 0x3c, 0x96, 0xbf, 0xf1, 0x7d,
	0xb8, 0xb7, 0x92, 0xc6, 0xa1, 0x62, 0xc4, 0x99, 0xa0, 0xd8, 0x01, 0xb0, 0x85, 0x97, 0x4f, 0xde,
	0x84, 0x6a, 0x68, 0xb2, 0x4b, 0x24, 0xbd, 0xea, 0x2c, 0xab, 0x58, 0xb4, 0x92, 0x10, 0xbd, 0x05,
	0xe8, 0x82, 0x33, 0x56, 0xda, 0x81, 0xdb, 0x69, 0x2b, 0xfb, 0xd3, 0x80, 0x32, 0xf2, 0x76, 0x40,
	0x4f, 0x49, 0xb6, 0x30, 0xee, 0xc0, 0x83, 0x4c, 0x58, 0xc4, 0x8d, 0x30, 0x5c, 0xeb, 0xf3, 0x31,
	0x0b, 0x3a, 0x3e, 0x1f, 0x33, 0x22, 0x24, 0x87, 0xea, 0xa4, 0xce, 0xf0, 0x1e, 0x34, 0x6c, 0xe1,
	0x6d, 0x24, 0x8a, 0x1a, 0x50, 0x1e, 0x44, 0x49, 0xcb, 0x03, 0x82, 0x9f, 0x43, 0x33, 0x8d, 0x2d,
	0xa4, 0xfc, 0x14, 0xb4, 0x74, 0x84, 0x37, 0xa1, 0x0c, 0x3d, 0xf2, 0xe9, 0x9a, 0x1b, 0xc7, 0xc7,
	0xd0, 0xca, 0x42, 0xc5, 0xea, 0xbb, 0xa0, 0x86, 0x43, 0x23, 0xa1, 0xf5, 0x36, 0x36, 0xd7, 0x0c,
	0x99, 0x19, 0x02, 0x85, 0x23, 0xfb, 0xf1, 0x04, 0xae, 0xdb, 0xc2, 0xdb, 0xc4, 0x46, 0xe6, 0xc3,
	0x6b, 0x50, 0xfb, 0x18, 0xde, 0x44, 0x97, 0xc8, 0xb7, 0x57, 0x9d, 0xa8, 0x44, 0x3a, 0xfc, 0xe7,
	0xc9, 0xe4, 0x5d, 0xa2, 0xa9, 0xf2, 0xaf, 0xb8, 0xc6, 0x87, 0x72, 0xac, 0xff, 0x61, 0x92, 0xaf,
	0x8a, 0x1c, 0x36, 0x9b, 0x7f, 0xa2, 0xdd, 0x80, 0x0e, 0x0f, 0x59, 0xde, 0xd3, 0x26, 0x7c, 0x97,
	0xb3, 0x7d, 0x57, 0xd2, 0xbe, 0x51, 0x0b, 0xea, 0x8c, 0x4e, 0x3a, 0xe9, 0x58, 0xc9, 0x23, 0x7c,
	0x17, 0xf4, 0xbf, 0x7d, 0x44, 0xf1, 0xda, 0xbf, 0xaa, 0x50, 0xb1, 0x85, 0x87, 0xbe, 0x28, 0x80,
	0x56, 0x2c, 0x75, 0x7b, 0x6d, 0xde, 0x95, 0x1b, 0xac, 0xef, 0x15, 0xc7, 0xc4, 0xb7, 0xdd, 0x87,
	0x5a, 0x24, 0xfd, 0x30, 0x8f, 0x26, 0xd2, 0xb3, 0x36, 0x6c, 0x8c, 0x45, 0xce, 0x14, 0x68, 0x66,
	0xac, 0xfb, 0x6e, 0x01, 0xef, 0x09, 0x9c, 0xfe, 0xf2, 0x6a, 0xb8, 0xd8, 0x12, 0x87, 0x7a, 0xd2,
	0xc6, 0x93, 0x3c, 0xba, 0xa4, 0xf6, 0x76, 0x81, 0xe6, 0x58, 0xf0, 0x9b, 0x02, 0x5b, 0xab, 0x17,
	0x7f, 0xa7, 0x40, 0x94, 0x0b, 0x98, 0xfe, 0xe2, 0x4a, 0xb0, 0xd8, 0xcf, 0x29, 0x40, 0xc2, 0xc3,
	0xe3, 0x3c, 0xb2, 0x84, 0x70, 0x7b, 0xf3, 0xde, 0x58, 0xed, 0x33, 0xdc, 0xb8, 0xbc, 0x98, 0xb9,
	0x53, 0x74, 0x09, 0xa0, 0x3f, 0x2b, 0x08, 0x88, 0xc4, 0x5f, 0x1f, 0x7c, 0x9f, 0x1b, 0xca, 0xf9,
	0xdc, 0x50, 0x7e, 0xce, 0x0d, 0xe5, 0x6c, 0x61, 0x94, 0xce, 0x17, 0x46, 0xe9, 0xc7, 0xc2, 0x28,
	0x1d, 0x9b, 0xde, 0x20, 0x38, 0x19, 0xf7, 0xcc, 0x3e, 0x1f, 0x5a, 0x09, 0x72, 0xeb, 0x20, 0x24,
	0xff, 0xc0, 0x39, 0xb1, 0xa6, 0xd6, 0xf2, 0x8b, 0x3c, 0x1b, 0x51, 0xd1, 0xab, 0xca, 0x4f, 0xf2,
	0xf6, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x5b, 0x30, 0xed, 0xd4, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	InitGameAndSetName(ctx context.Context, in *MsgInitGameAndSetName, opts ...grpc.CallOption) (*MsgInitGameAndSetNameResponse, error)
	SetName(ctx context.Context, in *MsgSetName, opts ...grpc.CallOption) (*MsgSetNameResponse, error)
	InitGameAndExtendField(ctx context.Context, in *MsgInitGameAndExtendField, opts ...grpc.CallOption) (*MsgInitGameAndExtendFieldResponse, error)
	ExtendField(ctx context.Context, in *MsgExtendField, opts ...grpc.CallOption) (*MsgExtendFieldResponse, error)
	InitGameAndCreateTree(ctx context.Context, in *MsgInitGameAndCreateTree, opts ...grpc.CallOption) (*MsgInitGameAndCreateTreeResponse, error)
	CreateTree(ctx context.Context, in *MsgCreateTree, opts ...grpc.CallOption) (*MsgCreateTreeResponse, error)
	MoveItemOnField(ctx context.Context, in *MsgMoveItemOnField, opts ...grpc.CallOption) (*MsgMoveItemOnFieldResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) InitGameAndSetName(ctx context.Context, in *MsgInitGameAndSetName, opts ...grpc.CallOption) (*MsgInitGameAndSetNameResponse, error) {
	out := new(MsgInitGameAndSetNameResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/InitGameAndSetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetName(ctx context.Context, in *MsgSetName, opts ...grpc.CallOption) (*MsgSetNameResponse, error) {
	out := new(MsgSetNameResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/SetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InitGameAndExtendField(ctx context.Context, in *MsgInitGameAndExtendField, opts ...grpc.CallOption) (*MsgInitGameAndExtendFieldResponse, error) {
	out := new(MsgInitGameAndExtendFieldResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/InitGameAndExtendField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExtendField(ctx context.Context, in *MsgExtendField, opts ...grpc.CallOption) (*MsgExtendFieldResponse, error) {
	out := new(MsgExtendFieldResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/ExtendField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InitGameAndCreateTree(ctx context.Context, in *MsgInitGameAndCreateTree, opts ...grpc.CallOption) (*MsgInitGameAndCreateTreeResponse, error) {
	out := new(MsgInitGameAndCreateTreeResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/InitGameAndCreateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTree(ctx context.Context, in *MsgCreateTree, opts ...grpc.CallOption) (*MsgCreateTreeResponse, error) {
	out := new(MsgCreateTreeResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/CreateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MoveItemOnField(ctx context.Context, in *MsgMoveItemOnField, opts ...grpc.CallOption) (*MsgMoveItemOnFieldResponse, error) {
	out := new(MsgMoveItemOnFieldResponse)
	err := c.cc.Invoke(ctx, "/MonetaToday.honeywood.bears.Msg/MoveItemOnField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	InitGameAndSetName(context.Context, *MsgInitGameAndSetName) (*MsgInitGameAndSetNameResponse, error)
	SetName(context.Context, *MsgSetName) (*MsgSetNameResponse, error)
	InitGameAndExtendField(context.Context, *MsgInitGameAndExtendField) (*MsgInitGameAndExtendFieldResponse, error)
	ExtendField(context.Context, *MsgExtendField) (*MsgExtendFieldResponse, error)
	InitGameAndCreateTree(context.Context, *MsgInitGameAndCreateTree) (*MsgInitGameAndCreateTreeResponse, error)
	CreateTree(context.Context, *MsgCreateTree) (*MsgCreateTreeResponse, error)
	MoveItemOnField(context.Context, *MsgMoveItemOnField) (*MsgMoveItemOnFieldResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) InitGameAndSetName(ctx context.Context, req *MsgInitGameAndSetName) (*MsgInitGameAndSetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitGameAndSetName not implemented")
}
func (*UnimplementedMsgServer) SetName(ctx context.Context, req *MsgSetName) (*MsgSetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetName not implemented")
}
func (*UnimplementedMsgServer) InitGameAndExtendField(ctx context.Context, req *MsgInitGameAndExtendField) (*MsgInitGameAndExtendFieldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitGameAndExtendField not implemented")
}
func (*UnimplementedMsgServer) ExtendField(ctx context.Context, req *MsgExtendField) (*MsgExtendFieldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExtendField not implemented")
}
func (*UnimplementedMsgServer) InitGameAndCreateTree(ctx context.Context, req *MsgInitGameAndCreateTree) (*MsgInitGameAndCreateTreeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitGameAndCreateTree not implemented")
}
func (*UnimplementedMsgServer) CreateTree(ctx context.Context, req *MsgCreateTree) (*MsgCreateTreeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTree not implemented")
}
func (*UnimplementedMsgServer) MoveItemOnField(ctx context.Context, req *MsgMoveItemOnField) (*MsgMoveItemOnFieldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveItemOnField not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_InitGameAndSetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitGameAndSetName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitGameAndSetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/InitGameAndSetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitGameAndSetName(ctx, req.(*MsgInitGameAndSetName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/SetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetName(ctx, req.(*MsgSetName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InitGameAndExtendField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitGameAndExtendField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitGameAndExtendField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/InitGameAndExtendField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitGameAndExtendField(ctx, req.(*MsgInitGameAndExtendField))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExtendField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExtendField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExtendField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/ExtendField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExtendField(ctx, req.(*MsgExtendField))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InitGameAndCreateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitGameAndCreateTree)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitGameAndCreateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/InitGameAndCreateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitGameAndCreateTree(ctx, req.(*MsgInitGameAndCreateTree))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTree)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/CreateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTree(ctx, req.(*MsgCreateTree))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MoveItemOnField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMoveItemOnField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MoveItemOnField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonetaToday.honeywood.bears.Msg/MoveItemOnField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MoveItemOnField(ctx, req.(*MsgMoveItemOnField))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MonetaToday.honeywood.bears.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitGameAndSetName",
			Handler:    _Msg_InitGameAndSetName_Handler,
		},
		{
			MethodName: "SetName",
			Handler:    _Msg_SetName_Handler,
		},
		{
			MethodName: "InitGameAndExtendField",
			Handler:    _Msg_InitGameAndExtendField_Handler,
		},
		{
			MethodName: "ExtendField",
			Handler:    _Msg_ExtendField_Handler,
		},
		{
			MethodName: "InitGameAndCreateTree",
			Handler:    _Msg_InitGameAndCreateTree_Handler,
		},
		{
			MethodName: "CreateTree",
			Handler:    _Msg_CreateTree_Handler,
		},
		{
			MethodName: "MoveItemOnField",
			Handler:    _Msg_MoveItemOnField_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bears/tx.proto",
}

func (m *MsgInitGameAndSetName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndSetName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndSetName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitGameAndSetNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndSetNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndSetNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BearId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BearId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInitGameAndExtendField) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndExtendField) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndExtendField) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitGameAndExtendFieldResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndExtendFieldResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndExtendFieldResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CountGrounds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CountGrounds))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgExtendField) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExtendField) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExtendField) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExtendFieldResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExtendFieldResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExtendFieldResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CountGrounds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CountGrounds))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitGameAndCreateTree) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndCreateTree) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndCreateTree) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitGameAndCreateTreeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitGameAndCreateTreeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitGameAndCreateTreeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tree != nil {
		{
			size, err := m.Tree.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTree) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTree) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTree) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GroundId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GroundId))
		i--
		dAtA[i] = 0x20
	}
	if m.FieldId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.FieldId))
		i--
		dAtA[i] = 0x18
	}
	if m.BearId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BearId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTreeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTreeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTreeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Tree != nil {
		{
			size, err := m.Tree.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMoveItemOnField) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMoveItemOnField) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMoveItemOnField) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewGroundId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewGroundId))
		i--
		dAtA[i] = 0x20
	}
	if m.GroundId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GroundId))
		i--
		dAtA[i] = 0x18
	}
	if m.FieldId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.FieldId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMoveItemOnFieldResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMoveItemOnFieldResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMoveItemOnFieldResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgInitGameAndSetName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitGameAndSetNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BearId != 0 {
		n += 1 + sovTx(uint64(m.BearId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInitGameAndExtendField) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitGameAndExtendFieldResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CountGrounds != 0 {
		n += 1 + sovTx(uint64(m.CountGrounds))
	}
	return n
}

func (m *MsgExtendField) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgExtendFieldResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CountGrounds != 0 {
		n += 1 + sovTx(uint64(m.CountGrounds))
	}
	return n
}

func (m *MsgInitGameAndCreateTree) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitGameAndCreateTreeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Tree != nil {
		l = m.Tree.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTree) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BearId != 0 {
		n += 1 + sovTx(uint64(m.BearId))
	}
	if m.FieldId != 0 {
		n += 1 + sovTx(uint64(m.FieldId))
	}
	if m.GroundId != 0 {
		n += 1 + sovTx(uint64(m.GroundId))
	}
	return n
}

func (m *MsgCreateTreeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Tree != nil {
		l = m.Tree.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMoveItemOnField) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.FieldId != 0 {
		n += 1 + sovTx(uint64(m.FieldId))
	}
	if m.GroundId != 0 {
		n += 1 + sovTx(uint64(m.GroundId))
	}
	if m.NewGroundId != 0 {
		n += 1 + sovTx(uint64(m.NewGroundId))
	}
	return n
}

func (m *MsgMoveItemOnFieldResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgInitGameAndSetName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndSetName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndSetName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitGameAndSetNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndSetNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndSetNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BearId", wireType)
			}
			m.BearId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BearId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitGameAndExtendField) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndExtendField: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndExtendField: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitGameAndExtendFieldResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndExtendFieldResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndExtendFieldResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountGrounds", wireType)
			}
			m.CountGrounds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CountGrounds |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExtendField) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExtendField: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExtendField: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExtendFieldResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExtendFieldResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExtendFieldResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountGrounds", wireType)
			}
			m.CountGrounds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CountGrounds |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitGameAndCreateTree) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndCreateTree: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndCreateTree: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitGameAndCreateTreeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitGameAndCreateTreeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitGameAndCreateTreeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tree", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tree == nil {
				m.Tree = &Trees{}
			}
			if err := m.Tree.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTree) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTree: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTree: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BearId", wireType)
			}
			m.BearId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BearId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FieldId", wireType)
			}
			m.FieldId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FieldId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroundId", wireType)
			}
			m.GroundId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroundId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTreeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTreeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTreeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tree", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tree == nil {
				m.Tree = &Trees{}
			}
			if err := m.Tree.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMoveItemOnField) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMoveItemOnField: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMoveItemOnField: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FieldId", wireType)
			}
			m.FieldId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FieldId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroundId", wireType)
			}
			m.GroundId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroundId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewGroundId", wireType)
			}
			m.NewGroundId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewGroundId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMoveItemOnFieldResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMoveItemOnFieldResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMoveItemOnFieldResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
