// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bears/decorations.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DecorationParams_DecorationTypes int32

const (
	DecorationParams_FLOWERS   DecorationParams_DecorationTypes = 0
	DecorationParams_FLAG      DecorationParams_DecorationTypes = 1
	DecorationParams_LAMP      DecorationParams_DecorationTypes = 2
	DecorationParams_GREEN_BEE DecorationParams_DecorationTypes = 3
	DecorationParams_FOUNTAIN  DecorationParams_DecorationTypes = 4
)

var DecorationParams_DecorationTypes_name = map[int32]string{
	0: "FLOWERS",
	1: "FLAG",
	2: "LAMP",
	3: "GREEN_BEE",
	4: "FOUNTAIN",
}

var DecorationParams_DecorationTypes_value = map[string]int32{
	"FLOWERS":   0,
	"FLAG":      1,
	"LAMP":      2,
	"GREEN_BEE": 3,
	"FOUNTAIN":  4,
}

func (x DecorationParams_DecorationTypes) String() string {
	return proto.EnumName(DecorationParams_DecorationTypes_name, int32(x))
}

func (DecorationParams_DecorationTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_afedde01ed0e943f, []int{0, 0}
}

type Decorations_DecorationTypes int32

const (
	Decorations_FLOWERS   Decorations_DecorationTypes = 0
	Decorations_FLAG      Decorations_DecorationTypes = 1
	Decorations_LAMP      Decorations_DecorationTypes = 2
	Decorations_GREEN_BEE Decorations_DecorationTypes = 3
	Decorations_FOUNTAIN  Decorations_DecorationTypes = 4
)

var Decorations_DecorationTypes_name = map[int32]string{
	0: "FLOWERS",
	1: "FLAG",
	2: "LAMP",
	3: "GREEN_BEE",
	4: "FOUNTAIN",
}

var Decorations_DecorationTypes_value = map[string]int32{
	"FLOWERS":   0,
	"FLAG":      1,
	"LAMP":      2,
	"GREEN_BEE": 3,
	"FOUNTAIN":  4,
}

func (x Decorations_DecorationTypes) String() string {
	return proto.EnumName(Decorations_DecorationTypes_name, int32(x))
}

func (Decorations_DecorationTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_afedde01ed0e943f, []int{1, 0}
}

type DecorationParams struct {
	DecorationType DecorationParams_DecorationTypes         `protobuf:"varint,1,opt,name=decoration_type,json=decorationType,proto3,enum=MonetaToday.honeywood.bears.DecorationParams_DecorationTypes" json:"decoration_type,omitempty" yaml:"decoration_type"`
	Price          github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=price,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"price" yaml:"price"`
}

func (m *DecorationParams) Reset()         { *m = DecorationParams{} }
func (m *DecorationParams) String() string { return proto.CompactTextString(m) }
func (*DecorationParams) ProtoMessage()    {}
func (*DecorationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_afedde01ed0e943f, []int{0}
}
func (m *DecorationParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecorationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecorationParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecorationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecorationParams.Merge(m, src)
}
func (m *DecorationParams) XXX_Size() int {
	return m.Size()
}
func (m *DecorationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DecorationParams.DiscardUnknown(m)
}

var xxx_messageInfo_DecorationParams proto.InternalMessageInfo

func (m *DecorationParams) GetDecorationType() DecorationParams_DecorationTypes {
	if m != nil {
		return m.DecorationType
	}
	return DecorationParams_FLOWERS
}

func (m *DecorationParams) GetPrice() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Price
	}
	return nil
}

type Decorations struct {
	Id        uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BearOwner *BearOwner        `protobuf:"bytes,2,opt,name=bearOwner,proto3" json:"bearOwner,omitempty"`
	Params    *DecorationParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Position  *ItemPosition     `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
}

func (m *Decorations) Reset()         { *m = Decorations{} }
func (m *Decorations) String() string { return proto.CompactTextString(m) }
func (*Decorations) ProtoMessage()    {}
func (*Decorations) Descriptor() ([]byte, []int) {
	return fileDescriptor_afedde01ed0e943f, []int{1}
}
func (m *Decorations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Decorations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Decorations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Decorations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decorations.Merge(m, src)
}
func (m *Decorations) XXX_Size() int {
	return m.Size()
}
func (m *Decorations) XXX_DiscardUnknown() {
	xxx_messageInfo_Decorations.DiscardUnknown(m)
}

var xxx_messageInfo_Decorations proto.InternalMessageInfo

func (m *Decorations) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Decorations) GetBearOwner() *BearOwner {
	if m != nil {
		return m.BearOwner
	}
	return nil
}

func (m *Decorations) GetParams() *DecorationParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Decorations) GetPosition() *ItemPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func init() {
	proto.RegisterEnum("MonetaToday.honeywood.bears.DecorationParams_DecorationTypes", DecorationParams_DecorationTypes_name, DecorationParams_DecorationTypes_value)
	proto.RegisterEnum("MonetaToday.honeywood.bears.Decorations_DecorationTypes", Decorations_DecorationTypes_name, Decorations_DecorationTypes_value)
	proto.RegisterType((*DecorationParams)(nil), "MonetaToday.honeywood.bears.DecorationParams")
	proto.RegisterType((*Decorations)(nil), "MonetaToday.honeywood.bears.Decorations")
}

func init() { proto.RegisterFile("bears/decorations.proto", fileDescriptor_afedde01ed0e943f) }

var fileDescriptor_afedde01ed0e943f = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x6d, 0x37, 0x94, 0x74, 0x53, 0x52, 0xb3, 0x42, 0x60, 0x82, 0xe4, 0x44, 0x3e, 0xa0,
	0x70, 0xe8, 0x5a, 0x0d, 0x37, 0x24, 0x24, 0x62, 0xea, 0xb4, 0x95, 0xd2, 0x24, 0x32, 0x41, 0x95,
	0xb8, 0x54, 0xfe, 0xb3, 0xa4, 0x16, 0xb5, 0xc7, 0x78, 0x0d, 0xc5, 0x57, 0x9e, 0x80, 0xe7, 0xe0,
	0x31, 0x38, 0xf5, 0xd8, 0x23, 0x12, 0x52, 0x40, 0xc9, 0x1b, 0xf4, 0x09, 0x90, 0x77, 0x4d, 0x13,
	0x72, 0x88, 0x84, 0xc4, 0x25, 0x19, 0x8d, 0xe7, 0xfb, 0xe6, 0xd3, 0x6f, 0x16, 0x3d, 0xf0, 0xa8,
	0x9b, 0x32, 0x33, 0xa0, 0x3e, 0xa4, 0x6e, 0x16, 0x42, 0xcc, 0x48, 0x92, 0x42, 0x06, 0xf8, 0xd1,
	0x31, 0xc4, 0x34, 0x73, 0xc7, 0x10, 0xb8, 0x39, 0x39, 0x83, 0x98, 0xe6, 0x17, 0x00, 0x01, 0xe1,
	0xe3, 0x0d, 0xdd, 0x07, 0x16, 0x01, 0x33, 0x3d, 0x97, 0x51, 0xf3, 0xe3, 0x9e, 0x47, 0x33, 0x77,
	0xcf, 0xf4, 0x21, 0x8c, 0x85, 0xb8, 0x71, 0x6f, 0x02, 0x13, 0xe0, 0xa5, 0x59, 0x54, 0x65, 0x17,
	0x8b, 0x5d, 0x6f, 0x43, 0x7a, 0x1e, 0x94, 0x6b, 0x1a, 0x77, 0x45, 0x8f, 0xff, 0x8a, 0x96, 0xf1,
	0x43, 0x41, 0xea, 0xfe, 0x4d, 0x9e, 0x91, 0x9b, 0xba, 0x11, 0xc3, 0x9f, 0x65, 0xb4, 0xb3, 0x08,
	0x79, 0x9a, 0xe5, 0x09, 0xd5, 0xe4, 0x96, 0xdc, 0xae, 0x77, 0x9e, 0x93, 0x35, 0x49, 0xc9, 0xaa,
	0xd1, 0x52, 0x63, 0x9c, 0x27, 0x94, 0x59, 0x8d, 0xeb, 0x69, 0xf3, 0x7e, 0xee, 0x46, 0xe7, 0xcf,
	0x8c, 0x15, 0x7f, 0xc3, 0xa9, 0x07, 0x7f, 0x0d, 0xe3, 0xf7, 0xe8, 0x56, 0x92, 0x86, 0x3e, 0xd5,
	0x94, 0xd6, 0x46, 0xbb, 0xd6, 0x79, 0x48, 0x04, 0x06, 0x52, 0x60, 0x20, 0x25, 0x06, 0xf2, 0x12,
	0xc2, 0xd8, 0x7a, 0x71, 0x39, 0x6d, 0x4a, 0xd7, 0xd3, 0xe6, 0xb6, 0x70, 0xe6, 0x2a, 0xe3, 0xeb,
	0xcf, 0x66, 0x7b, 0x12, 0x66, 0x67, 0x1f, 0x3c, 0xe2, 0x43, 0x64, 0x96, 0x0c, 0xc5, 0xdf, 0x2e,
	0x0b, 0xde, 0x99, 0xc5, 0x56, 0xc6, 0x0d, 0x98, 0x23, 0x36, 0x19, 0x43, 0xb4, 0xb3, 0x92, 0x18,
	0xd7, 0xd0, 0xed, 0x5e, 0x7f, 0x78, 0x62, 0x3b, 0xaf, 0x54, 0x09, 0x57, 0x51, 0xa5, 0xd7, 0xef,
	0x1e, 0xa8, 0x72, 0x51, 0xf5, 0xbb, 0xc7, 0x23, 0x55, 0xc1, 0x77, 0xd0, 0xd6, 0x81, 0x63, 0xdb,
	0x83, 0x53, 0xcb, 0xb6, 0xd5, 0x0d, 0xbc, 0x8d, 0xaa, 0xbd, 0xe1, 0xeb, 0xc1, 0xb8, 0x7b, 0x34,
	0x50, 0x2b, 0xc6, 0x37, 0x05, 0xd5, 0x16, 0x8e, 0x0c, 0xd7, 0x91, 0x12, 0x06, 0x1c, 0x65, 0xc5,
	0x51, 0xc2, 0x00, 0xef, 0xa3, 0xad, 0x82, 0xdc, 0xf0, 0x22, 0xa6, 0xa9, 0xa6, 0xb4, 0xe4, 0x76,
	0xad, 0xf3, 0x78, 0x2d, 0x61, 0xeb, 0xcf, 0xb4, 0xb3, 0x10, 0x62, 0x1b, 0x6d, 0x26, 0x9c, 0xb7,
	0xb6, 0xc1, 0x2d, 0x76, 0xff, 0xe9, 0x48, 0x4e, 0x29, 0xc6, 0x36, 0xaa, 0x26, 0xc0, 0xc2, 0xe2,
	0x8b, 0x56, 0xe1, 0x46, 0x4f, 0xd6, 0x1a, 0x1d, 0x65, 0x34, 0x1a, 0x95, 0x02, 0xe7, 0x46, 0xfa,
	0xdf, 0x21, 0x5a, 0x87, 0x97, 0x33, 0x5d, 0xbe, 0x9a, 0xe9, 0xf2, 0xaf, 0x99, 0x2e, 0x7f, 0x99,
	0xeb, 0xd2, 0xd5, 0x5c, 0x97, 0xbe, 0xcf, 0x75, 0xe9, 0x0d, 0x59, 0x3a, 0xf0, 0x52, 0x52, 0xf3,
	0xb0, 0x48, 0x7a, 0x02, 0x10, 0x98, 0x9f, 0xc4, 0x63, 0x17, 0xc7, 0xf6, 0x36, 0xf9, 0x9b, 0x7f,
	0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xbe, 0x0c, 0x92, 0x88, 0x03, 0x00, 0x00,
}

func (m *DecorationParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecorationParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecorationParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Price) > 0 {
		for iNdEx := len(m.Price) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Price[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDecorations(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.DecorationType != 0 {
		i = encodeVarintDecorations(dAtA, i, uint64(m.DecorationType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Decorations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Decorations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Decorations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Position != nil {
		{
			size, err := m.Position.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDecorations(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDecorations(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.BearOwner != nil {
		{
			size, err := m.BearOwner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDecorations(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDecorations(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDecorations(dAtA []byte, offset int, v uint64) int {
	offset -= sovDecorations(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DecorationParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DecorationType != 0 {
		n += 1 + sovDecorations(uint64(m.DecorationType))
	}
	if len(m.Price) > 0 {
		for _, e := range m.Price {
			l = e.Size()
			n += 1 + l + sovDecorations(uint64(l))
		}
	}
	return n
}

func (m *Decorations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDecorations(uint64(m.Id))
	}
	if m.BearOwner != nil {
		l = m.BearOwner.Size()
		n += 1 + l + sovDecorations(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovDecorations(uint64(l))
	}
	if m.Position != nil {
		l = m.Position.Size()
		n += 1 + l + sovDecorations(uint64(l))
	}
	return n
}

func sovDecorations(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDecorations(x uint64) (n int) {
	return sovDecorations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DecorationParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDecorations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DecorationParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DecorationParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DecorationType", wireType)
			}
			m.DecorationType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DecorationType |= DecorationParams_DecorationTypes(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDecorations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDecorations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = append(m.Price, types.Coin{})
			if err := m.Price[len(m.Price)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDecorations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDecorations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Decorations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDecorations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Decorations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Decorations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BearOwner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDecorations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDecorations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BearOwner == nil {
				m.BearOwner = &BearOwner{}
			}
			if err := m.BearOwner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDecorations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDecorations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DecorationParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDecorations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDecorations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Position == nil {
				m.Position = &ItemPosition{}
			}
			if err := m.Position.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDecorations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDecorations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDecorations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDecorations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDecorations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDecorations
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDecorations
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDecorations
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDecorations        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDecorations          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDecorations = fmt.Errorf("proto: unexpected end of group")
)
